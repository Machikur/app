
plugins {
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

task buildJar(type: Jar) {
    manifest {
        attributes(
                'Main-Class': 'com.example.Main'
        )
    }
    classifier = 'all'
    baseName = 'MyJar'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
            {
                exclude "META-INF/*.SF"
                exclude "META-INF/*.DSA"
                exclude "META-INF/*.RSA"
            }
    with jar
}
dependencies {
	implementation  'com.sparkjava:spark-core:2.9.3'
    implementation ('com.sparkjava:spark-template-thymeleaf:2.7.1') {
         exclude group : 'sparkjava:spark-core' , module: 'sparkjava:spark-core'
    }
    implementation 'org.projectlombok:lombok:1.18.24'
    implementation 'org.slf4j:slf4j-simple:1.7.36'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    annotationProcessor "org.openjdk.jmh:jmh-generator-annprocess:1.35"
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}


tasks.named('test') {
    useJUnitPlatform()
}
